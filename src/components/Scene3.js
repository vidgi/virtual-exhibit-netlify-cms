/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import {Canvas, useFrame} from 'react-three-fiber'


export default function Scene3({params}) {

  const { nodes, materials } = useGLTF('/test2.gltf')
  const ref = useRef()

  useFrame((state) => {

    const t = state.clock.getElapsedTime()+params.timedelay

    ref.current.rotation.x = params.rotation[0]*t
    ref.current.rotation.y = params.rotation[1]*t
    ref.current.rotation.z = params.rotation[2]*t

    ref.current.position.x = params.position[0]
    ref.current.position.y = params.position[1]
    ref.current.position.z = params.position[2]

    ref.current.scale.x = params.scale[0]
    ref.current.scale.y = params.scale[1]
    ref.current.scale.z = params.scale[2]


  })

  return (
    <group ref={ref} dispose={null}>
    <mesh geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} scale={1.5}> 
           <meshStandardMaterial
              color={params.color}
              roughness={0.5}
              metalness={0.95}
              wireframe = {true}
              attach="material"
              transparent={true}
              opacity={0.8}
              wireframeLinewidth = {1}
         />
      </mesh>
    </group>
  )
}

useGLTF.preload('/test2.gltf')
